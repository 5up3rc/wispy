* The Command grammar can't parse the string "New-Object 'int[,]' 3,2"
* Pathological case for Command grammar for the string "New-Object -ArgumentList 3,2 -TypeName 'int[,]'"

* Pathological case for SwitchCondition

($PSBoundParameters.GetEnumerator().
 Where({$_.Value -eq $true}).Key)

* Pathological case for the following:

for ($i = 1; $i -le 10; ++$i) { "$i $($i*$i)" }


* Infinite loop with "process {{{" over ScriptBlock (same for "process { } process { }" under ScriptBlockBody)

* We don't support comments apparently.

* wispy doesn't support full Unicode variables.

* 'Format-Table path,linenumber -AutoSize' is unrecognised by the Command grammar.

* Another pathological case:

data -supportedcommand Format-XML {
  Format-XML -strings string1, string2, string3
}

* Infinite loop with the following examples over the TryStatement:
{
	try { $value * 10 }
	catch [ System.OutOfMemoryException ] { $err = "Naruto" }
	catch { $err = $_.Exception.Message }	
}
{
	try { $value * 10 }
	catch [System.OutOfMemoryException] { $err = "Obito" }
	catch { $err = $_.Exception.Message }
	finally { $Time=Get-Date}	
}


* RequiresComment -> not supporting command arguments

* Handle extra new lines issue under statements (matching something else)

function My-Function
{
}\n

-> Pipeline instead FunctionStatement due the fact that there is a new line after the last brace

* 1.4L is seen as a member access, not as a number.